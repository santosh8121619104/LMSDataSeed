// <auto-generated />
using System;
using LMSDataSeed.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMSDataSeed.Migrations
{
    [DbContext(typeof(LmsContext))]
    [Migration("20240411114153_ImplementedLessonStep")]
    partial class ImplementedLessonStep
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LMSDataSeed.Models.Announcement", b =>
                {
                    b.Property<int>("AnnouncementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnnouncementID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnouncementId"));

                    b.Property<string>("AnnouncementText")
                        .HasColumnType("text");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("NotificationType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("AnnouncementId")
                        .HasName("PK__Announce__9DE445545CCBA3E5");

                    b.HasIndex(new[] { "CourseId" }, "IX_Announcement_CourseID");

                    b.HasIndex(new[] { "UserId" }, "IX_Announcement_UserID");

                    b.ToTable("Announcement", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Assessment", b =>
                {
                    b.Property<int>("AssessmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssessmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessmentId"));

                    b.Property<string>("AssessmentName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AssessmentType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.HasKey("AssessmentId")
                        .HasName("PK__Assessme__3D2BF83E1CFE8C04");

                    b.HasIndex(new[] { "CourseId" }, "IX_Assessment_CourseID");

                    b.HasIndex(new[] { "ModuleId" }, "IX_Assessment_ModuleID");

                    b.ToTable("Assessment", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssignmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"));

                    b.Property<string>("AssignmentName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.HasKey("AssignmentId")
                        .HasName("PK__Assignme__32499E57F27E7EEC");

                    b.HasIndex(new[] { "CourseId" }, "IX_Assignment_CourseID");

                    b.HasIndex(new[] { "ModuleId" }, "IX_Assignment_ModuleID");

                    b.ToTable("Assignment", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__19093A2BA508823B");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("CourseName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int")
                        .HasColumnName("InstructorID");

                    b.Property<string>("InstructorName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("CourseId")
                        .HasName("PK__Course__C92D71878AC8F4D7");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Course_CategoryID");

                    b.HasIndex(new[] { "InstructorId" }, "IX_Course_InstructorID");

                    b.ToTable("Course", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.DiscussionForum", b =>
                {
                    b.Property<int>("ForumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ForumID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ForumId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ForumName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ModeratorId")
                        .HasColumnType("int")
                        .HasColumnName("ModeratorID");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.HasKey("ForumId")
                        .HasName("PK__Discussi__E210AC4F792C10AD");

                    b.HasIndex(new[] { "CourseId" }, "IX_DiscussionForum_CourseID");

                    b.HasIndex(new[] { "ModeratorId" }, "IX_DiscussionForum_ModeratorID");

                    b.ToTable("DiscussionForum", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EnrollmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("EnrollmentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("EnrollmentId")
                        .HasName("PK__Enrollme__7F6877FB6A9BD524");

                    b.HasIndex(new[] { "CourseId" }, "IX_Enrollment_CourseID");

                    b.HasIndex(new[] { "UserId" }, "IX_Enrollment_UserID");

                    b.ToTable("Enrollment", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FeedbackText")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int>("RatingScore")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDF6934A39D8");

                    b.HasIndex(new[] { "CourseId" }, "IX_Feedback_CourseID");

                    b.HasIndex(new[] { "UserId" }, "IX_Feedback_UserID");

                    b.ToTable("Feedback", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.ForumPost", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PostID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"));

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ForumId")
                        .HasColumnType("int")
                        .HasColumnName("ForumID");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("PostContent")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PostDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PostId")
                        .HasName("PK__ForumPos__AA12603815D3DB81");

                    b.HasIndex(new[] { "ForumId" }, "IX_ForumPost_ForumID");

                    b.HasIndex(new[] { "UserId" }, "IX_ForumPost_UserID");

                    b.ToTable("ForumPost", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GradeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"));

                    b.Property<int?>("AssessmentId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Grade1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Grade");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("GradeId")
                        .HasName("PK__Grade__54F87A3769AA87FD");

                    b.HasIndex(new[] { "AssessmentId" }, "IX_Grade_AssessmentID");

                    b.HasIndex(new[] { "UserId" }, "IX_Grade_UserID");

                    b.ToTable("Grade", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LessonID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("ContentType")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LessonName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("LessonId")
                        .HasName("PK__Lesson__B084ACB04D4D10C9");

                    b.HasIndex(new[] { "CourseId" }, "IX_Lesson_CourseID");

                    b.ToTable("Lesson", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.LessonStep", b =>
                {
                    b.Property<int>("LessonId")
                        .HasColumnType("int")
                        .HasColumnName("LessonID");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int?>("ContentType")
                        .HasColumnType("int");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsPaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("LessonStepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LessonStepID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LessonStepId"));

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<TimeOnly?>("Runtime")
                        .HasColumnType("time");

                    b.Property<string>("StepName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("LessonId")
                        .HasName("PK__LessonStep__B084ACB04D4D10C9");

                    b.HasIndex("CourseId");

                    b.ToTable("LessonStep", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModuleId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("ModuleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ModuleId")
                        .HasName("PK__Module__2B7477870971D4C0");

                    b.HasIndex(new[] { "CourseId" }, "IX_Module_CourseID");

                    b.ToTable("Module", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("CorrectAnswer")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("Options")
                        .HasColumnType("text");

                    b.Property<string>("QuestionText")
                        .HasColumnType("text");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06F8C69A51E48");

                    b.HasIndex(new[] { "QuizId" }, "IX_Question_QuizID");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("QuizName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("QuizId")
                        .HasName("PK__Quiz__8B42AE6EF9B1A206");

                    b.HasIndex(new[] { "CourseId" }, "IX_Quiz_CourseID");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Resource", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ResourceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResourceId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.Property<string>("ResourceName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ResourceId")
                        .HasName("PK__Resource__4ED1814F2B313C3D");

                    b.HasIndex(new[] { "CourseId" }, "IX_Resource_CourseID");

                    b.HasIndex(new[] { "ModuleId" }, "IX_Resource_ModuleID");

                    b.ToTable("Resource", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Submission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubmissionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<int?>("AssignmentId")
                        .HasColumnType("int")
                        .HasColumnName("AssignmentID");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Grade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SubmittedFileName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("SubmissionId")
                        .HasName("PK__Submissi__449EE105E7F5E9AA");

                    b.HasIndex(new[] { "AssignmentId" }, "IX_Submission_AssignmentID");

                    b.HasIndex(new[] { "UserId" }, "IX_Submission_UserID");

                    b.ToTable("Submission", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK__User__1788CCACCFD56CE4");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserActivityLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<DateTime?>("ActivityDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ActivityDetails")
                        .HasColumnType("text");

                    b.Property<string>("ActivityType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("LogId")
                        .HasName("PK__UserActi__5E5499A85E897BAE");

                    b.HasIndex(new[] { "UserId" }, "IX_UserActivityLog_UserID");

                    b.ToTable("UserActivityLog", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserPreference", b =>
                {
                    b.Property<int>("PreferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PreferenceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreferenceId"));

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Language")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("Theme")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PreferenceId")
                        .HasName("PK__UserPref__E228490FA5BFCA85");

                    b.HasIndex(new[] { "UserId" }, "IX_UserPreferences_UserID");

                    b.ToTable("UserPreferences");
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserProgress", b =>
                {
                    b.Property<int>("UserProgressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserProgressID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserProgressId"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("CourseID");

                    b.Property<string>("CourseName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("LessonId")
                        .HasColumnType("int")
                        .HasColumnName("LessonID");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int")
                        .HasColumnName("ModuleID");

                    b.Property<int?>("ProgressPercentage")
                        .HasColumnType("int");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserProgressId")
                        .HasName("PK__UserProg__DD2907C60DB6D93E");

                    b.HasIndex(new[] { "CourseId" }, "IX_UserProgress_CourseID");

                    b.HasIndex(new[] { "ModuleId" }, "IX_UserProgress_ModuleID");

                    b.HasIndex(new[] { "QuizId" }, "IX_UserProgress_QuizID");

                    b.HasIndex(new[] { "UserId" }, "IX_UserProgress_UserID");

                    b.ToTable("UserProgress", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"));

                    b.Property<DateTimeOffset?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(sysdatetimeoffset())");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserRoleId")
                        .HasName("PK__UserRole__3D978A55F36E6A56");

                    b.HasIndex(new[] { "UserId" }, "IX_UserRole_UserID");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("LMSDataSeed.Models.Announcement", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Announcements")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Announcem__Cours__1DB06A4F");

                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("Announcements")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Announcem__UserI__1EA48E88");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Assessment", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Assessments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Assessmen__Cours__30C33EC3");

                    b.HasOne("LMSDataSeed.Models.Module", "Module")
                        .WithMany("Assessments")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK__Assessmen__Modul__31B762FC");

                    b.Navigation("Course");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Assignment", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Assignmen__Cours__7D439ABD");

                    b.HasOne("LMSDataSeed.Models.Module", "Module")
                        .WithMany("Assignments")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK__Assignmen__Modul__7E37BEF6");

                    b.Navigation("Course");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Course", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Course__Category__7A3223E8");

                    b.HasOne("LMSDataSeed.Models.User", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .HasConstraintName("FK__Course__Instruct__3F466844");

                    b.Navigation("Category");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("LMSDataSeed.Models.DiscussionForum", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("DiscussionForums")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Discussio__Cours__0A9D95DB");

                    b.HasOne("LMSDataSeed.Models.User", "Moderator")
                        .WithMany("DiscussionForums")
                        .HasForeignKey("ModeratorId")
                        .HasConstraintName("FK__Discussio__Moder__0B91BA14");

                    b.Navigation("Course");

                    b.Navigation("Moderator");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Enrollment", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Enrollmen__Cours__44FF419A");

                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("Enrollments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Enrollmen__UserI__440B1D61");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Feedback", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Feedbacks")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Feedback__Course__6442E2C9");

                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Feedback__UserID__65370702");

                    b.Navigation("Course");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.ForumPost", b =>
                {
                    b.HasOne("LMSDataSeed.Models.DiscussionForum", "Forum")
                        .WithMany("ForumPosts")
                        .HasForeignKey("ForumId")
                        .HasConstraintName("FK__ForumPost__Forum__114A936A");

                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("ForumPosts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__ForumPost__UserI__123EB7A3");

                    b.Navigation("Forum");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Grade", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Assessment", "Assessment")
                        .WithMany("Grades")
                        .HasForeignKey("AssessmentId")
                        .HasConstraintName("FK__Grade__Assessmen__3864608B");

                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("Grades")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Grade__UserID__37703C52");

                    b.Navigation("Assessment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Lesson", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Lesson__CourseID__4D5F7D71");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LMSDataSeed.Models.LessonStep", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("LessonSteps")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__LessonStep__CourseID__4D5F7D71");

                    b.HasOne("LMSDataSeed.Models.Lesson", "Lesson")
                        .WithMany("LessonSteps")
                        .HasForeignKey("LessonId")
                        .IsRequired()
                        .HasConstraintName("FK__LessonStep__LessonID__4D5F7D71");

                    b.Navigation("Course");

                    b.Navigation("Lesson");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Module", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Modules")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Module__CourseID__66603565");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Question", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK__Question__QuizID__778AC167");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Quiz", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Quizzes")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Quiz__CourseID__71D1E811");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Resource", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("Resources")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Resource__Course__245D67DE");

                    b.HasOne("LMSDataSeed.Models.Module", "Module")
                        .WithMany("Resources")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK__Resource__Module__25518C17");

                    b.Navigation("Course");

                    b.Navigation("Module");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Submission", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Assignment", "Assignment")
                        .WithMany("Submissions")
                        .HasForeignKey("AssignmentId")
                        .HasConstraintName("FK__Submissio__Assig__04E4BC85");

                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("Submissions")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Submissio__UserI__03F0984C");

                    b.Navigation("Assignment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserActivityLog", b =>
                {
                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("UserActivityLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserActiv__UserI__2B0A656D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserPreference", b =>
                {
                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("UserPreferences")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserPrefe__UserI__3E1D39E1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserProgress", b =>
                {
                    b.HasOne("LMSDataSeed.Models.Course", "Course")
                        .WithMany("UserProgresses")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__UserProgr__Cours__44CA3770");

                    b.HasOne("LMSDataSeed.Models.Module", "Module")
                        .WithMany("UserProgresses")
                        .HasForeignKey("ModuleId")
                        .HasConstraintName("FK__UserProgr__Modul__45BE5BA9");

                    b.HasOne("LMSDataSeed.Models.Quiz", "Quiz")
                        .WithMany("UserProgresses")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK__UserProgr__QuizI__47A6A41B");

                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("UserProgresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserProgr__UserI__43D61337");

                    b.Navigation("Course");

                    b.Navigation("Module");

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.UserRole", b =>
                {
                    b.HasOne("LMSDataSeed.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserRole__UserID__17F790F9");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Assessment", b =>
                {
                    b.Navigation("Grades");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Assignment", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Course", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Assessments");

                    b.Navigation("Assignments");

                    b.Navigation("DiscussionForums");

                    b.Navigation("Enrollments");

                    b.Navigation("Feedbacks");

                    b.Navigation("LessonSteps");

                    b.Navigation("Lessons");

                    b.Navigation("Modules");

                    b.Navigation("Quizzes");

                    b.Navigation("Resources");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("LMSDataSeed.Models.DiscussionForum", b =>
                {
                    b.Navigation("ForumPosts");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Lesson", b =>
                {
                    b.Navigation("LessonSteps");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Module", b =>
                {
                    b.Navigation("Assessments");

                    b.Navigation("Assignments");

                    b.Navigation("Resources");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("LMSDataSeed.Models.Quiz", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("UserProgresses");
                });

            modelBuilder.Entity("LMSDataSeed.Models.User", b =>
                {
                    b.Navigation("Announcements");

                    b.Navigation("Courses");

                    b.Navigation("DiscussionForums");

                    b.Navigation("Enrollments");

                    b.Navigation("Feedbacks");

                    b.Navigation("ForumPosts");

                    b.Navigation("Grades");

                    b.Navigation("Submissions");

                    b.Navigation("UserActivityLogs");

                    b.Navigation("UserPreferences");

                    b.Navigation("UserProgresses");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
